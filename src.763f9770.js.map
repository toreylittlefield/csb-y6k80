{"version":3,"sources":["src/index.ts"],"names":[],"mappings":"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","file":"src.763f9770.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\nconst API_BREEDS_URL = `https://dog.ceo/api/breeds/list/all`;\nconst API_BY_BREED_URL = (breedname) =>\n  `https://dog.ceo/api/breed/${breedname}/images`;\nconst template = document.querySelector(\"template\");\nconst appContainer = document.querySelector(\"#app\");\nconst sentinel = document.getElementById(\"sentinel\");\nconst observerAlertSection = document.querySelector(\".observer\");\nlet breedsList = [];\n\nconst apiFetch = async (url) => {\n  const res = await fetch(url);\n  if (res.ok) {\n    const json = await res.json();\n    return json;\n  } else {\n    return [];\n  }\n};\n\nconst fetchBreedImg = async (breed) => {\n  const breedParam = API_BY_BREED_URL(breed);\n  const { message = [] } = await apiFetch(breedParam);\n  const [firstImg = \"\"] = message;\n  return firstImg;\n};\n\nasync function createBreedElement(breed) {\n  const image = await fetchBreedImg(breed);\n  const clone = template.content.firstElementChild.cloneNode(true);\n  console.log(clone.childNodes);\n  const [img, figcaption] = clone.querySelectorAll(\"img, figcaption\");\n  img.src = image;\n  img.alt = breed;\n  figcaption.textContent = `The name of this breed is: ${breed}`;\n  appContainer.appendChild(clone);\n}\n\nconst loadBreedsList = (async () => {\n  const breedsList = await apiFetch(API_BREEDS_URL);\n  return Object.keys(breedsList.message);\n})();\n\nconst createFirstFiveSections = async (breedsList) => {\n  let i = 0;\n  while (i < 5 && breedsList.length > 0) {\n    i++;\n    const breed = breedsList.pop();\n    await createBreedElement(breed);\n  }\n  return;\n};\n\n(async () => {\n  breedsList = await loadBreedsList;\n  breedsList.reverse();\n  await createFirstFiveSections(breedsList);\n  const obsEntries = (entries) => {\n    if (entries.length > 0) {\n      const [target] = entries;\n      if (target.isIntersecting && breedsList.length > 0) {\n        observerAlertSection.classList.add(\"on\");\n        observerAlertSection.firstElementChild.textContent = \"Observing\";\n        // const breed = breedsList.pop();\n        // createBreedElement(breed);\n        createFirstFiveSections(breedsList);\n      } else {\n        observerAlertSection.classList.remove(\"on\");\n        observerAlertSection.firstElementChild.textContent = \"Observer Off\";\n      }\n    }\n  };\n\n  let observer = new IntersectionObserver(obsEntries);\n  observer.observe(sentinel);\n})();\n"]}